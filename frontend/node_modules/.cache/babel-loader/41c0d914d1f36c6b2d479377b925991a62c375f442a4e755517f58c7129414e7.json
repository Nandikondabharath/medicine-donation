{"ast":null,"code":"function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      _defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nimport normalizeArguments from './normalizeArguments.js';\nimport parsePhoneNumberWithError from './parsePhoneNumberWithError_.js';\nimport ParseError from './ParseError.js';\nimport Metadata from './metadata.js';\nimport checkNumberLength from './helpers/checkNumberLength.js';\nexport default function validatePhoneNumberLength() {\n  var _normalizeArguments = normalizeArguments(arguments),\n    text = _normalizeArguments.text,\n    options = _normalizeArguments.options,\n    metadata = _normalizeArguments.metadata;\n  options = _objectSpread(_objectSpread({}, options), {}, {\n    extract: false\n  });\n\n  // Parse phone number.\n  try {\n    var phoneNumber = parsePhoneNumberWithError(text, options, metadata);\n    metadata = new Metadata(metadata);\n    metadata.selectNumberingPlan(phoneNumber.countryCallingCode);\n    var result = checkNumberLength(phoneNumber.nationalNumber, metadata);\n    if (result !== 'IS_POSSIBLE') {\n      return result;\n    }\n  } catch (error) {\n    /* istanbul ignore else */\n    if (error instanceof ParseError) {\n      return error.message;\n    } else {\n      throw error;\n    }\n  }\n}","map":{"version":3,"names":["normalizeArguments","parsePhoneNumberWithError","ParseError","Metadata","checkNumberLength","validatePhoneNumberLength","_normalizeArguments","arguments","text","options","metadata","_objectSpread","extract","phoneNumber","selectNumberingPlan","countryCallingCode","result","nationalNumber","error","message"],"sources":["C:\\Users\\Nanndikonda Bharath\\OneDrive\\Desktop\\medicine-donation-full\\medicine-donation-full\\frontend\\node_modules\\libphonenumber-js\\source\\validatePhoneNumberLength.js"],"sourcesContent":["import normalizeArguments from './normalizeArguments.js'\r\nimport parsePhoneNumberWithError from './parsePhoneNumberWithError_.js'\r\nimport ParseError from './ParseError.js'\r\nimport Metadata from './metadata.js'\r\nimport checkNumberLength from './helpers/checkNumberLength.js'\r\n\r\nexport default function validatePhoneNumberLength() {\r\n\tlet { text, options, metadata } = normalizeArguments(arguments)\r\n\toptions = {\r\n\t\t...options,\r\n\t\textract: false\r\n\t}\r\n\r\n\t// Parse phone number.\r\n\ttry {\r\n\t\tconst phoneNumber = parsePhoneNumberWithError(text, options, metadata)\r\n\t\tmetadata = new Metadata(metadata)\r\n\t\tmetadata.selectNumberingPlan(phoneNumber.countryCallingCode)\r\n\t\tconst result = checkNumberLength(phoneNumber.nationalNumber, metadata)\r\n\t\tif (result !== 'IS_POSSIBLE') {\r\n\t\t\treturn result\r\n\t\t}\r\n\t} catch (error) {\r\n\t\t/* istanbul ignore else */\r\n\t\tif (error instanceof ParseError) {\r\n\t\t\treturn error.message\r\n\t\t} else {\r\n\t\t\tthrow error\r\n\t\t}\r\n\t}\r\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,kBAAkB,MAAM,yBAAyB;AACxD,OAAOC,yBAAyB,MAAM,iCAAiC;AACvE,OAAOC,UAAU,MAAM,iBAAiB;AACxC,OAAOC,QAAQ,MAAM,eAAe;AACpC,OAAOC,iBAAiB,MAAM,gCAAgC;AAE9D,eAAe,SAASC,yBAAyBA,CAAA,EAAG;EACnD,IAAAC,mBAAA,GAAkCN,kBAAkB,CAACO,SAAS,CAAC;IAAzDC,IAAI,GAAAF,mBAAA,CAAJE,IAAI;IAAEC,OAAO,GAAAH,mBAAA,CAAPG,OAAO;IAAEC,QAAQ,GAAAJ,mBAAA,CAARI,QAAQ;EAC7BD,OAAO,GAAAE,aAAA,CAAAA,aAAA,KACHF,OAAO;IACVG,OAAO,EAAE;EAAK,EACd;;EAED;EACA,IAAI;IACH,IAAMC,WAAW,GAAGZ,yBAAyB,CAACO,IAAI,EAAEC,OAAO,EAAEC,QAAQ,CAAC;IACtEA,QAAQ,GAAG,IAAIP,QAAQ,CAACO,QAAQ,CAAC;IACjCA,QAAQ,CAACI,mBAAmB,CAACD,WAAW,CAACE,kBAAkB,CAAC;IAC5D,IAAMC,MAAM,GAAGZ,iBAAiB,CAACS,WAAW,CAACI,cAAc,EAAEP,QAAQ,CAAC;IACtE,IAAIM,MAAM,KAAK,aAAa,EAAE;MAC7B,OAAOA,MAAM;IACd;EACD,CAAC,CAAC,OAAOE,KAAK,EAAE;IACf;IACA,IAAIA,KAAK,YAAYhB,UAAU,EAAE;MAChC,OAAOgB,KAAK,CAACC,OAAO;IACrB,CAAC,MAAM;MACN,MAAMD,KAAK;IACZ;EACD;AACD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}