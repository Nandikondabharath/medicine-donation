{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Downloads\\\\medicine-donation-full\\\\frontend\\\\src\\\\components\\\\Donate\\\\DonateForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport API from '../../api';\nimport Tesseract from 'tesseract.js';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function DonateForm() {\n  _s();\n  const [name, setName] = useState('');\n  const [manufacturer, setManufacturer] = useState('');\n  const [expiry, setExpiry] = useState('');\n  const [quantity, setQuantity] = useState(1);\n  const [image, setImage] = useState(null);\n  const [ocrLoading, setOcrLoading] = useState(false);\n  const [msg, setMsg] = useState('');\n\n  // === OCR with Server ===\n  const handleOCRServer = async () => {\n    if (!image) return setMsg('Upload image first');\n    setOcrLoading(true);\n    setMsg('Sending image to server OCR service...');\n    try {\n      const fd = new FormData();\n      fd.append('image', image);\n      const res = await API.post('/medicines/ocr', fd, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      if (res.data && res.data.text) {\n        const text = res.data.text;\n\n        // Regex patterns for multiple expiry date formats\n        const regexes = [/\\b(?:EXP(?:IRY)?(?:\\s*DATE)?\\.?\\s*[:\\-]?\\s*)?(\\d{1,2}[\\/\\-\\.]\\d{1,2}[\\/\\-\\.]\\d{2,4})/i,\n        // 12/03/2026\n        /\\b(?:EXP(?:IRY)?(?:\\s*DATE)?\\.?\\s*[:\\-]?\\s*)?(\\d{1,2}[\\/\\-\\.]\\d{2,4})/i,\n        // 12/2026\n        /\\b(?:EXP(?:IRY)?(?:\\s*DATE)?\\.?\\s*[:\\-]?\\s*)?([A-Za-z]{3,}\\.?[\\s\\-]?\\d{2,4})/i,\n        // AUG 2026, MAR.2028\n        /\\b(20\\d{2})\\b/ // Year only\n        ];\n        let match = null;\n        for (let re of regexes) {\n          match = text.match(re);\n          if (match) break;\n        }\n        if (match && match[1]) {\n          let dateStr = match[1].trim().replace(/\\./g, '').toUpperCase();\n          let parsedDate = null;\n\n          // Month name mapping\n          const months = {\n            JAN: 1,\n            FEB: 2,\n            MAR: 3,\n            APR: 4,\n            MAY: 5,\n            JUN: 6,\n            JUL: 7,\n            AUG: 8,\n            SEP: 9,\n            OCT: 10,\n            NOV: 11,\n            DEC: 12\n          };\n          if (/^\\d{1,2}[\\/\\-]\\d{4}$/.test(dateStr)) {\n            // MM/YYYY\n            const [mm, yyyy] = dateStr.split(/\\/|-/);\n            parsedDate = new Date(Number(yyyy), Number(mm), 0);\n          } else if (/^\\d{1,2}[\\/\\-]\\d{1,2}[\\/\\-]\\d{2,4}$/.test(dateStr)) {\n            // DD/MM/YYYY\n            const parts = dateStr.split(/\\/|-/);\n            let dd = parts[0],\n              mm = parts[1],\n              yyyy = parts[2];\n            if (yyyy.length === 2) yyyy = '20' + yyyy;\n            parsedDate = new Date(Number(yyyy), Number(mm) - 1, Number(dd));\n          } else {\n            // Month names like AUG 2026\n            const parts = dateStr.split(/[\\s\\-]/);\n            const monthTxt = parts[0].slice(0, 3); // e.g., AUG\n            const yyyy = parts[1];\n            if (months[monthTxt]) {\n              parsedDate = new Date(Number(yyyy), months[monthTxt], 0);\n            } else if (/^20\\d{2}$/.test(dateStr)) {\n              parsedDate = new Date(Number(dateStr), 11, 31); // Dec 31 of that year\n            }\n          }\n          if (parsedDate && !isNaN(parsedDate)) {\n            const yyyy = parsedDate.getFullYear();\n            const mm = String(parsedDate.getMonth() + 1).padStart(2, '0');\n            const dd = String(parsedDate.getDate()).padStart(2, '0');\n            const finalDate = `${yyyy}-${mm}-${dd}`;\n            setExpiry(finalDate);\n            setMsg('Server OCR found possible expiry: ' + finalDate + '. Full text: ' + text.slice(0, 200));\n          } else {\n            setMsg('OCR found text but could not parse a valid date. Text: ' + text.slice(0, 200));\n          }\n        } else {\n          setMsg('No expiry pattern found in OCR text. Extracted: ' + text.slice(0, 200));\n        }\n      } else {\n        setMsg('Server OCR returned no text.');\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setMsg('Server OCR failed: ' + (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || err.message));\n    } finally {\n      setOcrLoading(false);\n    }\n  };\n\n  // === Form submit ===\n  const submit = async e => {\n    e.preventDefault();\n    try {\n      const payload = {\n        name,\n        manufacturer,\n        expiryDate: expiry,\n        quantity\n      };\n      await API.post('/medicines/donate', payload);\n      setMsg('Donation submitted');\n      setName('');\n      setManufacturer('');\n      setExpiry('');\n      setQuantity(1);\n      setImage(null);\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setMsg(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-lg-8\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card shadow\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header bg-primary text-white\",\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"mb-0\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-pills me-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 17\n              }, this), \"Donate Medicine\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [msg && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"alert alert-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-info-circle me-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 19\n              }, this), msg]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: submit,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-md-6\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"name\",\n                    className: \"form-label\",\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"fas fa-tag me-1\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 148,\n                      columnNumber: 23\n                    }, this), \"Medicine Name\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 147,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    id: \"name\",\n                    className: \"form-control\",\n                    placeholder: \"e.g., Aspirin\",\n                    value: name,\n                    onChange: e => setName(e.target.value),\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 150,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-md-6\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"manufacturer\",\n                    className: \"form-label\",\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"fas fa-industry me-1\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 161,\n                      columnNumber: 23\n                    }, this), \"Manufacturer\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 160,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    id: \"manufacturer\",\n                    className: \"form-control\",\n                    placeholder: \"e.g., Bayer\",\n                    value: manufacturer,\n                    onChange: e => setManufacturer(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 163,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-md-6\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"expiry\",\n                    className: \"form-label\",\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"fas fa-calendar-alt me-1\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 175,\n                      columnNumber: 23\n                    }, this), \"Expiry Date (or use OCR)\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 174,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    id: \"expiry\",\n                    type: \"date\",\n                    className: \"form-control\",\n                    value: expiry,\n                    onChange: e => setExpiry(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 177,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-md-6\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"quantity\",\n                    className: \"form-label\",\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"fas fa-hashtag me-1\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 187,\n                      columnNumber: 23\n                    }, this), \"Quantity\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 186,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    id: \"quantity\",\n                    type: \"number\",\n                    min: \"1\",\n                    className: \"form-control\",\n                    value: quantity,\n                    onChange: e => setQuantity(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 189,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"image\",\n                  className: \"form-label\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fas fa-upload me-1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 201,\n                    columnNumber: 21\n                  }, this), \"Upload Image (label/box with expiry)\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"image\",\n                  type: \"file\",\n                  accept: \"image/*\",\n                  className: \"form-control\",\n                  onChange: e => setImage(e.target.files[0])\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3 d-flex flex-wrap gap-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"btn btn-outline-success\",\n                  onClick: handleOCRServer,\n                  disabled: ocrLoading,\n                  children: ocrLoading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"fas fa-spinner fa-spin me-1\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 220,\n                      columnNumber: 25\n                    }, this), \"OCR...\"]\n                  }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"fas fa-server me-1\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 224,\n                      columnNumber: 25\n                    }, this), \"Extract Expiry (Server)\"]\n                  }, void 0, true)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-success\",\n                  type: \"submit\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fas fa-paper-plane me-1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 229,\n                    columnNumber: 21\n                  }, this), \"Submit Donation\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n}\n_s(DonateForm, \"d8NEqlegv00YUUhw3I09aEkFNqs=\");\n_c = DonateForm;\nvar _c;\n$RefreshReg$(_c, \"DonateForm\");","map":{"version":3,"names":["React","useState","API","Tesseract","jsxDEV","_jsxDEV","Fragment","_Fragment","DonateForm","_s","name","setName","manufacturer","setManufacturer","expiry","setExpiry","quantity","setQuantity","image","setImage","ocrLoading","setOcrLoading","msg","setMsg","handleOCRServer","fd","FormData","append","res","post","headers","data","text","regexes","match","re","dateStr","trim","replace","toUpperCase","parsedDate","months","JAN","FEB","MAR","APR","MAY","JUN","JUL","AUG","SEP","OCT","NOV","DEC","test","mm","yyyy","split","Date","Number","parts","dd","length","monthTxt","slice","isNaN","getFullYear","String","getMonth","padStart","getDate","finalDate","err","_err$response","_err$response$data","response","message","submit","e","preventDefault","payload","expiryDate","_err$response2","_err$response2$data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","placeholder","value","onChange","target","required","type","min","accept","files","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Downloads/medicine-donation-full/frontend/src/components/Donate/DonateForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport API from '../../api';\nimport Tesseract from 'tesseract.js';\n\nexport default function DonateForm() {\n  const [name, setName] = useState('');\n  const [manufacturer, setManufacturer] = useState('');\n  const [expiry, setExpiry] = useState('');\n  const [quantity, setQuantity] = useState(1);\n  const [image, setImage] = useState(null);\n  const [ocrLoading, setOcrLoading] = useState(false);\n  const [msg, setMsg] = useState('');\n\n  // === OCR with Server ===\n  const handleOCRServer = async () => {\n    if (!image) return setMsg('Upload image first');\n    setOcrLoading(true);\n    setMsg('Sending image to server OCR service...');\n\n    try {\n      const fd = new FormData();\n      fd.append('image', image);\n      const res = await API.post('/medicines/ocr', fd, {\n        headers: { 'Content-Type': 'multipart/form-data' },\n      });\n\n      if (res.data && res.data.text) {\n        const text = res.data.text;\n\n        // Regex patterns for multiple expiry date formats\n        const regexes = [\n          /\\b(?:EXP(?:IRY)?(?:\\s*DATE)?\\.?\\s*[:\\-]?\\s*)?(\\d{1,2}[\\/\\-\\.]\\d{1,2}[\\/\\-\\.]\\d{2,4})/i, // 12/03/2026\n          /\\b(?:EXP(?:IRY)?(?:\\s*DATE)?\\.?\\s*[:\\-]?\\s*)?(\\d{1,2}[\\/\\-\\.]\\d{2,4})/i,                // 12/2026\n          /\\b(?:EXP(?:IRY)?(?:\\s*DATE)?\\.?\\s*[:\\-]?\\s*)?([A-Za-z]{3,}\\.?[\\s\\-]?\\d{2,4})/i,         // AUG 2026, MAR.2028\n          /\\b(20\\d{2})\\b/,                                                                       // Year only\n        ];\n\n        let match = null;\n        for (let re of regexes) {\n          match = text.match(re);\n          if (match) break;\n        }\n\n        if (match && match[1]) {\n          let dateStr = match[1].trim().replace(/\\./g, '').toUpperCase();\n          let parsedDate = null;\n\n          // Month name mapping\n          const months = {\n            JAN: 1, FEB: 2, MAR: 3, APR: 4, MAY: 5, JUN: 6,\n            JUL: 7, AUG: 8, SEP: 9, OCT: 10, NOV: 11, DEC: 12,\n          };\n\n          if (/^\\d{1,2}[\\/\\-]\\d{4}$/.test(dateStr)) {\n            // MM/YYYY\n            const [mm, yyyy] = dateStr.split(/\\/|-/);\n            parsedDate = new Date(Number(yyyy), Number(mm), 0);\n          } else if (/^\\d{1,2}[\\/\\-]\\d{1,2}[\\/\\-]\\d{2,4}$/.test(dateStr)) {\n            // DD/MM/YYYY\n            const parts = dateStr.split(/\\/|-/);\n            let dd = parts[0], mm = parts[1], yyyy = parts[2];\n            if (yyyy.length === 2) yyyy = '20' + yyyy;\n            parsedDate = new Date(Number(yyyy), Number(mm) - 1, Number(dd));\n          } else {\n            // Month names like AUG 2026\n            const parts = dateStr.split(/[\\s\\-]/);\n            const monthTxt = parts[0].slice(0, 3); // e.g., AUG\n            const yyyy = parts[1];\n            if (months[monthTxt]) {\n              parsedDate = new Date(Number(yyyy), months[monthTxt], 0);\n            } else if (/^20\\d{2}$/.test(dateStr)) {\n              parsedDate = new Date(Number(dateStr), 11, 31); // Dec 31 of that year\n            }\n          }\n\n          if (parsedDate && !isNaN(parsedDate)) {\n            const yyyy = parsedDate.getFullYear();\n            const mm = String(parsedDate.getMonth() + 1).padStart(2, '0');\n            const dd = String(parsedDate.getDate()).padStart(2, '0');\n            const finalDate = `${yyyy}-${mm}-${dd}`;\n            setExpiry(finalDate);\n            setMsg(\n              'Server OCR found possible expiry: ' +\n                finalDate +\n                '. Full text: ' +\n                text.slice(0, 200),\n            );\n          } else {\n            setMsg(\n              'OCR found text but could not parse a valid date. Text: ' +\n                text.slice(0, 200),\n            );\n          }\n        } else {\n          setMsg(\n            'No expiry pattern found in OCR text. Extracted: ' +\n              text.slice(0, 200),\n          );\n        }\n      } else {\n        setMsg('Server OCR returned no text.');\n      }\n    } catch (err) {\n      setMsg('Server OCR failed: ' + (err.response?.data?.message || err.message));\n    } finally {\n      setOcrLoading(false);\n    }\n  };\n\n  // === Form submit ===\n  const submit = async (e) => {\n    e.preventDefault();\n    try {\n      const payload = { name, manufacturer, expiryDate: expiry, quantity };\n      await API.post('/medicines/donate', payload);\n      setMsg('Donation submitted');\n      setName('');\n      setManufacturer('');\n      setExpiry('');\n      setQuantity(1);\n      setImage(null);\n    } catch (err) {\n      setMsg(err.response?.data?.message || err.message);\n    }\n  };\n\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row justify-content-center\">\n        <div className=\"col-lg-8\">\n          <div className=\"card shadow\">\n            <div className=\"card-header bg-primary text-white\">\n              <h4 className=\"mb-0\">\n                <i className=\"fas fa-pills me-2\"></i>Donate Medicine\n              </h4>\n            </div>\n            <div className=\"card-body\">\n              {msg && (\n                <div className=\"alert alert-info\">\n                  <i className=\"fas fa-info-circle me-2\"></i>\n                  {msg}\n                </div>\n              )}\n              <form onSubmit={submit}>\n                <div className=\"row mb-3\">\n                  <div className=\"col-md-6\">\n                    <label htmlFor=\"name\" className=\"form-label\">\n                      <i className=\"fas fa-tag me-1\"></i>Medicine Name\n                    </label>\n                    <input\n                      id=\"name\"\n                      className=\"form-control\"\n                      placeholder=\"e.g., Aspirin\"\n                      value={name}\n                      onChange={(e) => setName(e.target.value)}\n                      required\n                    />\n                  </div>\n                  <div className=\"col-md-6\">\n                    <label htmlFor=\"manufacturer\" className=\"form-label\">\n                      <i className=\"fas fa-industry me-1\"></i>Manufacturer\n                    </label>\n                    <input\n                      id=\"manufacturer\"\n                      className=\"form-control\"\n                      placeholder=\"e.g., Bayer\"\n                      value={manufacturer}\n                      onChange={(e) => setManufacturer(e.target.value)}\n                    />\n                  </div>\n                </div>\n                <div className=\"row mb-3\">\n                  <div className=\"col-md-6\">\n                    <label htmlFor=\"expiry\" className=\"form-label\">\n                      <i className=\"fas fa-calendar-alt me-1\"></i>Expiry Date (or use OCR)\n                    </label>\n                    <input\n                      id=\"expiry\"\n                      type=\"date\"\n                      className=\"form-control\"\n                      value={expiry}\n                      onChange={(e) => setExpiry(e.target.value)}\n                    />\n                  </div>\n                  <div className=\"col-md-6\">\n                    <label htmlFor=\"quantity\" className=\"form-label\">\n                      <i className=\"fas fa-hashtag me-1\"></i>Quantity\n                    </label>\n                    <input\n                      id=\"quantity\"\n                      type=\"number\"\n                      min=\"1\"\n                      className=\"form-control\"\n                      value={quantity}\n                      onChange={(e) => setQuantity(e.target.value)}\n                    />\n                  </div>\n                </div>\n                <div className=\"mb-3\">\n                  <label htmlFor=\"image\" className=\"form-label\">\n                    <i className=\"fas fa-upload me-1\"></i>Upload Image (label/box with expiry)\n                  </label>\n                  <input\n                    id=\"image\"\n                    type=\"file\"\n                    accept=\"image/*\"\n                    className=\"form-control\"\n                    onChange={(e) => setImage(e.target.files[0])}\n                  />\n                </div>\n                <div className=\"mb-3 d-flex flex-wrap gap-2\">\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-outline-success\"\n                    onClick={handleOCRServer}\n                    disabled={ocrLoading}\n                  >\n                    {ocrLoading ? (\n                      <>\n                        <i className=\"fas fa-spinner fa-spin me-1\"></i>OCR...\n                      </>\n                    ) : (\n                      <>\n                        <i className=\"fas fa-server me-1\"></i>Extract Expiry (Server)\n                      </>\n                    )}\n                  </button>\n                  <button className=\"btn btn-success\" type=\"submit\">\n                    <i className=\"fas fa-paper-plane me-1\"></i>Submit Donation\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}