{"ast":null,"code":"function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nfunction _defineProperties(e, r) {\n  for (var t = 0; t < r.length; t++) {\n    var o = r[t];\n    o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o);\n  }\n}\nfunction _createClass(e, r, t) {\n  return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", {\n    writable: !1\n  }), e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nfunction _classCallCheck(a, n) {\n  if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\");\n}\n// https://medium.com/dsinjs/implementing-lru-cache-in-javascript-94ba6755cda9\nvar Node = /*#__PURE__*/_createClass(function Node(key, value) {\n  var next = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  var prev = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n  _classCallCheck(this, Node);\n  this.key = key;\n  this.value = value;\n  this.next = next;\n  this.prev = prev;\n});\nvar LRUCache = /*#__PURE__*/function () {\n  //set default limit of 10 if limit is not passed.\n  function LRUCache() {\n    var limit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n    _classCallCheck(this, LRUCache);\n    this.size = 0;\n    this.limit = limit;\n    this.head = null;\n    this.tail = null;\n    this.cache = {};\n  }\n\n  // Write Node to head of LinkedList\n  // update cache with Node key and Node reference\n  return _createClass(LRUCache, [{\n    key: \"put\",\n    value: function put(key, value) {\n      this.ensureLimit();\n      if (!this.head) {\n        this.head = this.tail = new Node(key, value);\n      } else {\n        var node = new Node(key, value, this.head);\n        this.head.prev = node;\n        this.head = node;\n      }\n\n      //Update the cache map\n      this.cache[key] = this.head;\n      this.size++;\n    }\n\n    // Read from cache map and make that node as new Head of LinkedList\n  }, {\n    key: \"get\",\n    value: function get(key) {\n      if (this.cache[key]) {\n        var value = this.cache[key].value;\n\n        // node removed from it's position and cache\n        this.remove(key);\n        // write node again to the head of LinkedList to make it most recently used\n        this.put(key, value);\n        return value;\n      }\n      console.log(\"Item not available in cache for key \".concat(key));\n    }\n  }, {\n    key: \"ensureLimit\",\n    value: function ensureLimit() {\n      if (this.size === this.limit) {\n        this.remove(this.tail.key);\n      }\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(key) {\n      var node = this.cache[key];\n      if (node.prev !== null) {\n        node.prev.next = node.next;\n      } else {\n        this.head = node.next;\n      }\n      if (node.next !== null) {\n        node.next.prev = node.prev;\n      } else {\n        this.tail = node.prev;\n      }\n      delete this.cache[key];\n      this.size--;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.head = null;\n      this.tail = null;\n      this.size = 0;\n      this.cache = {};\n    }\n\n    // // Invokes the callback function with every node of the chain and the index of the node.\n    // forEach(fn) {\n    //   let node = this.head;\n    //   let counter = 0;\n    //   while (node) {\n    //     fn(node, counter);\n    //     node = node.next;\n    //     counter++;\n    //   }\n    // }\n\n    // // To iterate over LRU with a 'for...of' loop\n    // *[Symbol.iterator]() {\n    //   let node = this.head;\n    //   while (node) {\n    //     yield node;\n    //     node = node.next;\n    //   }\n    // }\n  }]);\n}();\nexport { LRUCache as default };","map":{"version":3,"names":["Node","_createClass","key","value","next","arguments","length","undefined","prev","_classCallCheck","LRUCache","limit","size","head","tail","cache","put","ensureLimit","node","get","remove","console","log","concat","clear","default"],"sources":["C:\\Users\\Nanndikonda Bharath\\OneDrive\\Desktop\\medicine-donation-full\\medicine-donation-full\\frontend\\node_modules\\libphonenumber-js\\source\\findNumbers\\LRUCache.js"],"sourcesContent":["// https://medium.com/dsinjs/implementing-lru-cache-in-javascript-94ba6755cda9\r\n\r\nclass Node {\r\n  constructor(key, value, next = null, prev = null) {\r\n    this.key = key;\r\n    this.value = value;\r\n    this.next = next;\r\n    this.prev = prev;\r\n  }\r\n}\r\n\r\nexport default class LRUCache {\r\n  //set default limit of 10 if limit is not passed.\r\n  constructor(limit = 10) {\r\n    this.size = 0;\r\n    this.limit = limit;\r\n    this.head = null;\r\n    this.tail = null;\r\n    this.cache = {};\r\n  }\r\n\r\n  // Write Node to head of LinkedList\r\n  // update cache with Node key and Node reference\r\n  put(key, value){\r\n    this.ensureLimit();\r\n\r\n    if(!this.head){\r\n      this.head = this.tail = new Node(key, value);\r\n    }else{\r\n      const node = new Node(key, value, this.head);\r\n      this.head.prev = node;\r\n      this.head = node;\r\n    }\r\n\r\n    //Update the cache map\r\n    this.cache[key] = this.head;\r\n    this.size++;\r\n  }\r\n\r\n  // Read from cache map and make that node as new Head of LinkedList\r\n  get(key){\r\n    if(this.cache[key]){\r\n      const value = this.cache[key].value;\r\n\r\n      // node removed from it's position and cache\r\n      this.remove(key)\r\n      // write node again to the head of LinkedList to make it most recently used\r\n      this.put(key, value);\r\n\r\n      return value;\r\n    }\r\n\r\n    console.log(`Item not available in cache for key ${key}`);\r\n  }\r\n\r\n  ensureLimit(){\r\n    if(this.size === this.limit){\r\n      this.remove(this.tail.key)\r\n    }\r\n  }\r\n\r\n  remove(key){\r\n    const node = this.cache[key];\r\n\r\n    if(node.prev !== null){\r\n      node.prev.next = node.next;\r\n    }else{\r\n      this.head = node.next;\r\n    }\r\n\r\n    if(node.next !== null){\r\n      node.next.prev = node.prev;\r\n    }else{\r\n      this.tail = node.prev\r\n    }\r\n\r\n    delete this.cache[key];\r\n    this.size--;\r\n  }\r\n\r\n  clear() {\r\n    this.head = null;\r\n    this.tail = null;\r\n    this.size = 0;\r\n    this.cache = {};\r\n  }\r\n\r\n  // // Invokes the callback function with every node of the chain and the index of the node.\r\n  // forEach(fn) {\r\n  //   let node = this.head;\r\n  //   let counter = 0;\r\n  //   while (node) {\r\n  //     fn(node, counter);\r\n  //     node = node.next;\r\n  //     counter++;\r\n  //   }\r\n  // }\r\n\r\n  // // To iterate over LRU with a 'for...of' loop\r\n  // *[Symbol.iterator]() {\r\n  //   let node = this.head;\r\n  //   while (node) {\r\n  //     yield node;\r\n  //     node = node.next;\r\n  //   }\r\n  // }\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}